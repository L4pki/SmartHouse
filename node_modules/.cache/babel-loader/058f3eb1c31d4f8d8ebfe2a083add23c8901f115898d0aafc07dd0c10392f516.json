{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samur\\\\react-intro\\\\src\\\\elements\\\\executors\\\\fan\\\\fan.js\";\nimport './fan.css';\nimport { fanState, useEffect } from 'react';\n\n/*function Fan() {\r\n\r\n\r\n    return (\r\n        <button id='1' type='button'>Вентилятор</button>\r\n    );\r\n}*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Fan() {\n  const addr = \"http://192.168.247.99\";\n\n  //const [temperature, setTemp] = useState(0);\n  //const [humid, setHumid] = useState(0);\n\n  /* useEffect(() => {\r\n       const timer = setInterval(() => {\r\n           onClickEvent();\r\n             }, 5000);\r\n             // очистка интервала\r\n       return () => clearInterval(timer);\r\n   });*/\n\n  async function onClickEvent() {\n    try {\n      const response = await fetch(`${addr}/fan?state=${!fanState ? '1' : '0'}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      fanState = data.state;\n      button.innerText = 'FAN: ' + (fanState ? 'ON' : 'OFF');\n      button.classList.toggle('on', fanState);\n      console.log(data);\n      //alert(\"Успешно\");\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  /*\r\n  async function onClickEvent() {\r\n  try {\r\n            const response = await fetch(`${addr}/temp`);\r\n      if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      setTemp(data.temp);\r\n      setHumid(data.humid);\r\n      console.log(data);\r\n      //alert(\"Успешно\");\r\n  }\r\n  catch (error) {\r\n      console.log(error);\r\n  }\r\n  }*/\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0412\\u0435\\u043D\\u0442\\u0438\\u043B\\u044F\\u0442\\u043E\\u0440\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"1\",\n      type: \"button\",\n      onClick: onClickEvent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 13\n  }, this);\n}\n_c = Fan;\nexport default Fan;\nvar _c;\n$RefreshReg$(_c, \"Fan\");","map":{"version":3,"names":["fanState","useEffect","jsxDEV","_jsxDEV","Fan","addr","onClickEvent","response","fetch","ok","Error","data","json","state","button","innerText","classList","toggle","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/samur/react-intro/src/elements/executors/fan/fan.js"],"sourcesContent":["import './fan.css'\r\nimport { fanState, useEffect } from 'react';\r\n\r\n/*function Fan() {\r\n\r\n\r\n    return (\r\n        <button id='1' type='button'>Вентилятор</button>\r\n    );\r\n}*/\r\n\r\n    function Fan() {\r\n        const addr = \"http://192.168.247.99\";\r\n    \r\n    \r\n        //const [temperature, setTemp] = useState(0);\r\n        //const [humid, setHumid] = useState(0);\r\n    \r\n       /* useEffect(() => {\r\n            const timer = setInterval(() => {\r\n                onClickEvent();\r\n    \r\n            }, 5000);\r\n    \r\n            // очистка интервала\r\n            return () => clearInterval(timer);\r\n        });*/\r\n    \r\n\r\n        async function onClickEvent() {\r\n            try {\r\n            \r\n            const response = await fetch(`${addr}/fan?state=${(!fanState ? '1' : '0')}`);\r\n            if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n            }\r\n            const data = await response.json();\r\n            fanState = data.state;\r\n            button.innerText = 'FAN: ' + (fanState ? 'ON':'OFF');\r\n            button.classList.toggle('on', fanState);\r\n            console.log(data);\r\n            //alert(\"Успешно\");\r\n            }\r\n            catch (error) {\r\n            console.log(error);\r\n            }\r\n            }\r\n            /*\r\n        async function onClickEvent() {\r\n            try {\r\n    \r\n                const response = await fetch(`${addr}/temp`);\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                const data = await response.json();\r\n                setTemp(data.temp);\r\n                setHumid(data.humid);\r\n                console.log(data);\r\n                //alert(\"Успешно\");\r\n            }\r\n            catch (error) {\r\n                console.log(error);\r\n            }\r\n        }*/\r\n        return (\r\n            <div>\r\n                <h1>Вентилятор</h1>\r\n                <button id='1' type='button' onClick={onClickEvent()}></button>\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default Fan;"],"mappings":";AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAQI,SAASC,GAAGA,CAAA,EAAG;EACX,MAAMC,IAAI,GAAG,uBAAuB;;EAGpC;EACA;;EAED;AACP;AACA;AACA;AACA;AACA;AACA;;EAKQ,eAAeC,YAAYA,CAAA,EAAG;IAC1B,IAAI;MAEJ,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,IAAK,cAAc,CAACL,QAAQ,GAAG,GAAG,GAAG,GAAK,EAAC,CAAC;MAC5E,IAAI,CAACO,QAAQ,CAACE,EAAE,EAAE;QAClB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAC9C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCZ,QAAQ,GAAGW,IAAI,CAACE,KAAK;MACrBC,MAAM,CAACC,SAAS,GAAG,OAAO,IAAIf,QAAQ,GAAG,IAAI,GAAC,KAAK,CAAC;MACpDc,MAAM,CAACE,SAAS,CAACC,MAAM,CAAC,IAAI,EAAEjB,QAAQ,CAAC;MACvCkB,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;MACjB;IACA,CAAC,CACD,OAAOS,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IAClB;EACA;EACA;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEQ,oBACIjB,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBtB,OAAA;MAAQuB,EAAE,EAAC,GAAG;MAACC,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAEtB,YAAY,CAAC;IAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEd;AAACI,EAAA,GA5DQzB,GAAG;AA8DhB,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}