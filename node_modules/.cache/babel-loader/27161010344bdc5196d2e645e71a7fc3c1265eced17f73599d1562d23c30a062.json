{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samur\\\\react-intro\\\\src\\\\elements\\\\sensors\\\\sensors.js\",\n  _s = $RefreshSig$();\nimport { Children } from \"react\";\nimport Temperature from \"./temperature/temp.js\";\nimport \"./sensors.css\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sensor(props) {\n  _s();\n  const addr = \"http://192.168.247.99\";\n  const [temperature, setTemp] = useState(0);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      onClickEvent();\n    }, 5000);\n\n    // очистка интервала\n    return () => clearInterval(timer);\n  });\n  async function onClickEvent() {\n    try {\n      const response = await fetch(`${addr}/temp`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setTemp(data.temp);\n      console.log(data);\n      //alert(\"Успешно\");\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"sensor\",\n    children: [/*#__PURE__*/_jsxDEV(Temperature, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sensor__title\",\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"temperature = \", temperature]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 1\n    }, this), props.type === \"temp\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"sensor__button\",\n      onClick: onClickEvent,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 1\n    }, this), props.type === \"light\" && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"sensor__input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 1\n  }, this);\n}\n_s(Sensor, \"0oi8q/hU5Oq7FIK9mdVpJA7X6UQ=\");\n_c = Sensor;\nexport default Sensor;\nvar _c;\n$RefreshReg$(_c, \"Sensor\");","map":{"version":3,"names":["Children","Temperature","useState","useEffect","jsxDEV","_jsxDEV","Sensor","props","_s","addr","temperature","setTemp","timer","setInterval","onClickEvent","clearInterval","response","fetch","ok","Error","data","json","temp","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/samur/react-intro/src/elements/sensors/sensors.js"],"sourcesContent":["import { Children } from \"react\";\r\nimport Temperature from \"./temperature/temp.js\" ;\r\nimport \"./sensors.css\";\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Sensor(props)\r\n{\r\nconst addr = \"http://192.168.247.99\";\r\n\r\n\r\nconst [temperature, setTemp] = useState(0);\r\n\r\nuseEffect(() => {\r\nconst timer = setInterval(() => {\r\nonClickEvent();\r\n\r\n}, 5000);\r\n\r\n// очистка интервала\r\nreturn () => clearInterval(timer);\r\n});\r\n\r\nasync function onClickEvent()\r\n{\r\ntry {\r\n\r\nconst response = await fetch(`${addr}/temp`);\r\nif (!response.ok) {\r\nthrow new Error('Network response was not ok');\r\n}\r\nconst data = await response.json();\r\nsetTemp(data.temp);\r\n\r\nconsole.log(data);\r\n//alert(\"Успешно\");\r\n}\r\ncatch (error) {\r\nconsole.log(error);\r\n}\r\n}\r\n\r\n\r\nreturn(\r\n<section className=\"sensor\">\r\n    <Temperature/>\r\n<h3 className=\"sensor__title\">{props.name}</h3>\r\n<p>temperature = {temperature}</p>\r\n{props.type === \"temp\" &&\r\n<button type=\"button\" className=\"sensor__button\" onClick={onClickEvent}>Send</button>\r\n}\r\n{ props.type === \"light\" &&\r\n<input type=\"text\" className=\"sensor__input\"></input>\r\n}\r\n</section>\r\n);\r\n\r\n}\r\n\r\nexport default Sensor;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,OAAO,eAAe;AACtB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,MAAMA,CAACC,KAAK,EACrB;EAAAC,EAAA;EACA,MAAMC,IAAI,GAAG,uBAAuB;EAGpC,MAAM,CAACC,WAAW,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAE1CC,SAAS,CAAC,MAAM;IAChB,MAAMS,KAAK,GAAGC,WAAW,CAAC,MAAM;MAChCC,YAAY,CAAC,CAAC;IAEd,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMC,aAAa,CAACH,KAAK,CAAC;EACjC,CAAC,CAAC;EAEF,eAAeE,YAAYA,CAAA,EAC3B;IACA,IAAI;MAEJ,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAER,IAAK,OAAM,CAAC;MAC5C,IAAI,CAACO,QAAQ,CAACE,EAAE,EAAE;QAClB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAC9C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCV,OAAO,CAACS,IAAI,CAACE,IAAI,CAAC;MAElBC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;MACjB;IACA,CAAC,CACD,OAAOK,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IAClB;EACA;EAGA,oBACApB,OAAA;IAASqB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACvBtB,OAAA,CAACJ,WAAW;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAClB1B,OAAA;MAAIqB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEpB,KAAK,CAACyB;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/C1B,OAAA;MAAAsB,QAAA,GAAG,gBAAc,EAACjB,WAAW;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjCxB,KAAK,CAAC0B,IAAI,KAAK,MAAM,iBACtB5B,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAACP,SAAS,EAAC,gBAAgB;MAACQ,OAAO,EAAEpB,YAAa;MAAAa,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEnFxB,KAAK,CAAC0B,IAAI,KAAK,OAAO,iBACxB5B,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACP,SAAS,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5C,CAAC;AAGV;AAACvB,EAAA,CAnDQF,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AAqDf,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}