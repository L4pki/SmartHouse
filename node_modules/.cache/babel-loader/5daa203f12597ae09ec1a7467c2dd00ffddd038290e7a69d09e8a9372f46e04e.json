{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samur\\\\react-intro\\\\src\\\\elements\\\\sensors\\\\temperature\\\\temp.js\",\n  _s = $RefreshSig$();\nimport './temp.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Temperature() {\n  _s();\n  const addr = \"http://192.168.247.99\";\n  const [temperature, setTemp] = useState(0);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      onClickEvent();\n    }, 5000);\n\n    // очистка интервала\n    return () => clearInterval(timer);\n  });\n  async function onClickEvent() {\n    try {\n      const response = await fetch(`${addr}/temp`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setTemp(data.temp);\n      console.log(data);\n      //alert(\"Успешно\");\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"temperature = \", temperature]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(Temperature, \"0oi8q/hU5Oq7FIK9mdVpJA7X6UQ=\");\n_c = Temperature;\nexport default Temperature;\nvar _c;\n$RefreshReg$(_c, \"Temperature\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Temperature","_s","addr","temperature","setTemp","timer","setInterval","onClickEvent","clearInterval","response","fetch","ok","Error","data","json","temp","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/samur/react-intro/src/elements/sensors/temperature/temp.js"],"sourcesContent":["import './temp.css'\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Temperature() {\r\n    const addr = \"http://192.168.247.99\";\r\n\r\n\r\n    const [temperature, setTemp] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            onClickEvent();\r\n\r\n        }, 5000);\r\n\r\n        // очистка интервала\r\n        return () => clearInterval(timer);\r\n    });\r\n\r\n    async function onClickEvent() {\r\n        try {\r\n\r\n            const response = await fetch(`${addr}/temp`);\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const data = await response.json();\r\n            setTemp(data.temp);\r\n\r\n            console.log(data);\r\n            //alert(\"Успешно\");\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    return (\r\n        <p>temperature = {temperature}</p>\r\n        \r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Temperature;"],"mappings":";;AAAA,OAAO,YAAY;AACnB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,IAAI,GAAG,uBAAuB;EAGpC,MAAM,CAACC,WAAW,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMQ,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC5BC,YAAY,CAAC,CAAC;IAElB,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMC,aAAa,CAACH,KAAK,CAAC;EACrC,CAAC,CAAC;EAEF,eAAeE,YAAYA,CAAA,EAAG;IAC1B,IAAI;MAEA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAER,IAAK,OAAM,CAAC;MAC5C,IAAI,CAACO,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCV,OAAO,CAACS,IAAI,CAACE,IAAI,CAAC;MAElBC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;MACjB;IACJ,CAAC,CACD,OAAOK,KAAK,EAAE;MACVF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACtB;EACJ;EACA,oBACInB,OAAA;IAAAoB,QAAA,GAAG,gBAAc,EAAChB,WAAW;EAAA;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAG1C;AAACtB,EAAA,CArCQD,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAyCpB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}