{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samur\\\\react-intro\\\\src\\\\elements\\\\sensors\\\\temperature\\\\temp.js\",\n  _s = $RefreshSig$();\nimport './temp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Temperature() {\n  return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Temperatureeeee\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = Temperature;\nfunction Sensor(props) {\n  _s();\n  const addr = \"http://192.168.247.99\";\n  const [temperature, setTemp] = useState(0);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      onClickEvent();\n    }, 5000);\n\n    // очистка интервала\n    return () => clearInterval(timer);\n  });\n  async function onClickEvent() {\n    try {\n      const response = await fetch(`${addr}/temp`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setTemp(data.temp);\n      console.log(data);\n      //alert(\"Успешно\");\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"sensor\",\n    children: [/*#__PURE__*/_jsxDEV(Temperature, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sensor__title\",\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"temperature = \", temperature]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), props.type === \"light\" && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"sensor__input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(Sensor, \"0oi8q/hU5Oq7FIK9mdVpJA7X6UQ=\");\n_c2 = Sensor;\nexport default Temperature;\nvar _c, _c2;\n$RefreshReg$(_c, \"Temperature\");\n$RefreshReg$(_c2, \"Sensor\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Temperature","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Sensor","props","_s","addr","temperature","setTemp","useState","useEffect","timer","setInterval","onClickEvent","clearInterval","response","fetch","ok","Error","data","json","temp","console","log","error","className","name","type","_c2","$RefreshReg$"],"sources":["C:/Users/samur/react-intro/src/elements/sensors/temperature/temp.js"],"sourcesContent":["import './temp.css'\r\n\r\n\r\nfunction Temperature() {\r\n    return (\r\n        <h3>Temperatureeeee</h3>\r\n        \r\n    );\r\n}\r\n\r\nfunction Sensor(props) {\r\n    const addr = \"http://192.168.247.99\";\r\n\r\n\r\n    const [temperature, setTemp] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            onClickEvent();\r\n\r\n        }, 5000);\r\n\r\n        // очистка интервала\r\n        return () => clearInterval(timer);\r\n    });\r\n\r\n    async function onClickEvent() {\r\n        try {\r\n\r\n            const response = await fetch(`${addr}/temp`);\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const data = await response.json();\r\n            setTemp(data.temp);\r\n\r\n            console.log(data);\r\n            //alert(\"Успешно\");\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"sensor\">\r\n            <Temperature />\r\n            <h3 className=\"sensor__title\">{props.name}</h3>\r\n            <p>temperature = {temperature}</p>\r\n\r\n            {props.type === \"light\" &&\r\n                <input type=\"text\" className=\"sensor__input\"></input>\r\n            }\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Temperature;"],"mappings":";;AAAA,OAAO,YAAY;AAAA,SAAAA,MAAA,IAAAC,OAAA;AAGnB,SAASC,WAAWA,CAAA,EAAG;EACnB,oBACID,OAAA;IAAAE,QAAA,EAAI;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAGhC;AAACC,EAAA,GALQN,WAAW;AAOpB,SAASO,MAAMA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnB,MAAMC,IAAI,GAAG,uBAAuB;EAGpC,MAAM,CAACC,WAAW,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC5BC,YAAY,CAAC,CAAC;IAElB,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMC,aAAa,CAACH,KAAK,CAAC;EACrC,CAAC,CAAC;EAEF,eAAeE,YAAYA,CAAA,EAAG;IAC1B,IAAI;MAEA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,IAAK,OAAM,CAAC;MAC5C,IAAI,CAACS,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCZ,OAAO,CAACW,IAAI,CAACE,IAAI,CAAC;MAElBC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;MACjB;IACJ,CAAC,CACD,OAAOK,KAAK,EAAE;MACVF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACtB;EACJ;EAGA,oBACI7B,OAAA;IAAS8B,SAAS,EAAC,QAAQ;IAAA5B,QAAA,gBACvBF,OAAA,CAACC,WAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACfN,OAAA;MAAI8B,SAAS,EAAC,eAAe;MAAA5B,QAAA,EAAEO,KAAK,CAACsB;IAAI;MAAA5B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/CN,OAAA;MAAAE,QAAA,GAAG,gBAAc,EAACU,WAAW;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEjCG,KAAK,CAACuB,IAAI,KAAK,OAAO,iBACnBhC,OAAA;MAAOgC,IAAI,EAAC,MAAM;MAACF,SAAS,EAAC;IAAe;MAAA3B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEpD,CAAC;AAGlB;AAACI,EAAA,CA/CQF,MAAM;AAAAyB,GAAA,GAANzB,MAAM;AAkDf,eAAeP,WAAW;AAAC,IAAAM,EAAA,EAAA0B,GAAA;AAAAC,YAAA,CAAA3B,EAAA;AAAA2B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}